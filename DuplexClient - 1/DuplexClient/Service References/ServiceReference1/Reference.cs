//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DuplexClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDuplexCalculator12")]
    public interface IDuplexCalculator12 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexCalculator12/SendScreenshot", ReplyAction="http://tempuri.org/IDuplexCalculator12/SendScreenshotResponse")]
        int SendScreenshot(byte[] imageBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexCalculator12/SendScreenshot", ReplyAction="http://tempuri.org/IDuplexCalculator12/SendScreenshotResponse")]
        System.Threading.Tasks.Task<int> SendScreenshotAsync(byte[] imageBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexCalculator12/newUser", ReplyAction="http://tempuri.org/IDuplexCalculator12/newUserResponse")]
        string newUser(string userName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexCalculator12/newUser", ReplyAction="http://tempuri.org/IDuplexCalculator12/newUserResponse")]
        System.Threading.Tasks.Task<string> newUserAsync(string userName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexCalculator12/Login", ReplyAction="http://tempuri.org/IDuplexCalculator12/LoginResponse")]
        string Login(string userName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexCalculator12/Login", ReplyAction="http://tempuri.org/IDuplexCalculator12/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string userName, string Password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDuplexCalculator12Channel : DuplexClient.ServiceReference1.IDuplexCalculator12, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DuplexCalculator12Client : System.ServiceModel.ClientBase<DuplexClient.ServiceReference1.IDuplexCalculator12>, DuplexClient.ServiceReference1.IDuplexCalculator12 {
        
        public DuplexCalculator12Client() {
        }
        
        public DuplexCalculator12Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DuplexCalculator12Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DuplexCalculator12Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DuplexCalculator12Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendScreenshot(byte[] imageBytes) {
            return base.Channel.SendScreenshot(imageBytes);
        }
        
        public System.Threading.Tasks.Task<int> SendScreenshotAsync(byte[] imageBytes) {
            return base.Channel.SendScreenshotAsync(imageBytes);
        }
        
        public string newUser(string userName, string Password) {
            return base.Channel.newUser(userName, Password);
        }
        
        public System.Threading.Tasks.Task<string> newUserAsync(string userName, string Password) {
            return base.Channel.newUserAsync(userName, Password);
        }
        
        public string Login(string userName, string Password) {
            return base.Channel.Login(userName, Password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string userName, string Password) {
            return base.Channel.LoginAsync(userName, Password);
        }
    }
}
